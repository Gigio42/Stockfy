generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Conjugacoes {
  id_conjugacoes        Int     @id @default(autoincrement())
  medida                String
  largura               Int
  comprimento           Int
  rendimento            Int     @default(0)
  quantidade            Int     @default(0)
  quantidade_disponivel Int     @default(0)
  usado                 Boolean @default(false)
  part_number           String   @default("0")
  pedido_venda          Int     @default(0)

  chapaId    Int
  chapa      Chapas       @relation(fields: [chapaId], references: [id_chapa])
  Chapa_Item Chapa_Item[]

  @@index([chapaId])
}

model Chapas {
  id_chapa              Int     @id @default(autoincrement())
  id_compra             Int     @default(0)
  numero_cliente        Int     @default(0)
  fornecedor            String?
  comprador             String?
  unidade               String?
  qualidade             String?
  medida                String?
  largura               Int?
  comprimento           Int?
  quantidade_comprada   Int?    @default(0)
  quantidade_recebida   Int?    @default(0)
  quantidade_estoque    Int?    @default(0)
  quantidade_disponivel Int?    @default(0)
  onda                  String?
  coluna                Float?
  vincos                String?
  gramatura             Float?
  peso_total            Float?
  valor_unitario        String?
  valor_total           String?
  status                String?
  data_compra           String?
  data_prevista         String?
  data_recebimento      String?
  conjugado             Boolean @default(false)

  items       Chapa_Item[]
  conjugacoes Conjugacoes[]

  @@unique([id_chapa, id_compra])
}

model Chapa_Item {
  id_chapa_item Int     @id @default(autoincrement())
  quantidade    Int     @default(0)
  terminado     Boolean @default(false)
  itemId        Int
  chapaId       Int
  conjugacaoId  Int?

  item       Item         @relation(fields: [itemId], references: [id_item])
  chapa      Chapas       @relation(fields: [chapaId], references: [id_chapa], onUpdate: NoAction, onDelete: NoAction)
  conjugacao Conjugacoes? @relation(fields: [conjugacaoId], references: [id_conjugacoes])
}

model Item {
  id_item       Int     @id @default(autoincrement())
  part_number   String  @unique @default("0")
  pedido_venda  Int     @default(0)
  status        String  @default("")
  reservado_por String?

  chapas   Chapa_Item[]
  maquinas Item_Maquina[]
}

model Item_Maquina {
  id_item_maquina Int     @id @default(autoincrement())
  prazo           String?
  ordem           Int?
  ordemTotal      Int?
  executor        String?
  finalizado      Boolean @default(false)
  medida          String?
  op              Int?
  prioridade      Int?
  sistema         String?
  cliente         String?
  quantidade      Int?
  colaborador     String?
  maquinaId       Int
  itemId          Int

  maquina Maquina @relation(fields: [maquinaId], references: [id_maquina])
  Item    Item    @relation(fields: [itemId], references: [id_item])
}

model Maquina {
  id_maquina Int    @id @default(autoincrement())
  nome       String @default("")

  items    Item_Maquina[]
  usuarios Usuarios[]
}

model Usuarios {
  id_usuario Int    @id @default(autoincrement())
  username   String
  password   String
  cargo      String@default("")

  maquinas Maquina[]

  @@index([id_usuario])
}

model Historico {
  id_historico     Int     @id @default(autoincrement())
  chapa            String?
  quantidade       Int?
  modificacao      String
  modificado_por   String
  data_modificacao String
  data_prevista    String?
  part_number      String?
  maquina          String?
  ordem            Int?
  conjugacao       String?
  pedido_venda     String?

  @@index([id_historico])
}
